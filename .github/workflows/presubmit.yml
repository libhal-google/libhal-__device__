on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '0 12 * * 0'

jobs:
  cleanliness:
    name: Cleanliness Checks
    runs-on: ubuntu-20.04
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v2

      - name: 🛎️ Checkout NCC (naming convention checker)
        uses: actions/checkout@v2
        with:
          repository: 'nithinn/ncc'
          path: 'ncc'

      - name: 🔎 Check "${{ github.event.repository.name }}" directory
        run: test -d "${{ github.event.repository.name }}"

      - name: 📥 Install Doxygen and Graphviz
        run: sudo apt -y install doxygen graphviz

      - name: 📥 Install libclang-11-dev (for name style check)
        run: sudo apt install libclang-11-dev

      - name: 📥 Install cpplint
        run: python3 -m pip install cpplint==1.5.5

      - name: 📥 Install pip package 'clang' & 'pyyaml' (for ncc)
        run: python3 -m pip install clang pyyaml

      - name: 🧹 Lint
        run: |
             cpplint ${{ github.event.repository.name }}/*/*.cpp \
                     ${{ github.event.repository.name }}/*/*.hpp

      - name: 📃 Check Variable Names
        run: |
             ./ncc/ncc.py --recurse \
             --path ${{ github.event.repository.name }} \
             --style .naming.style | tee ncc.stderr
             [ ! -s ncc.stderr ]

      - name: 📖 Documentation
        working-directory: docs
        run: ./build_docs.sh

      - name: 🚀 Deploy
        uses: JamesIves/github-pages-deploy-action@3.7.1
        # Only Deploy to gh-pages on main branch event
        if: ${{ github.ref == 'refs/heads/main' &&
                github.event_name == 'push' }}
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: .
          CLEAN: true

  tests_and_builds:
    name: Test ➡️ Coverage ➡️ Build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: 🐍 Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install GCC
        run: |
             sudo add-apt-repository 'deb http://mirrors.kernel.org/ubuntu hirsute main universe'
             sudo apt update
             sudo apt install g++-11

      - name: 📥 Install Sammy
        run: python3 -m pip install --user --upgrade sammy-sjsu-dev2

      - name: ✨ Create new project
        run: sammy start project

      - name: 📦 Install ${{ github.repository }} library
        working-directory: project
        run: |
             sammy install --tag "${{ github.head_ref }}" "https://github.com/${{ github.repository }}.git"

      - name: 🧪 Run Tests
        working-directory: project/packages/${{ github.event.repository.name }}
        run: sammy build-test -r "tests/unity.test.cpp" -c "g++-11"

      - name: 🩺 Code Coverage
        working-directory: project/packages/${{ github.event.repository.name }}
        run: echo "no coverage script yet"

      - name: 🚀 Send Coverage to Codecov.io
        uses: codecov/codecov-action@v1
        with:
          file: projects/continuous_integration/build/test/coverage/coverage.xml
          name: Full Platform Unit Tests

      - name: 🗄️ Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: projects/continuous_integration/build/test/coverage/coverage.xml
